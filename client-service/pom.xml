<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.7.5</version>
        <relativePath/>
    </parent>

    <artifactId>client-service</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <name>client-service</name>
    <description>Client Service</description>

    <properties>

        <!-- COMMON -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <!-- END COMMON -->

        <!-- JAVA -->
        <java.version>19</java.version>
        <!-- END JAVA -->

        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven-compiler-plugin.version>3.10.1</maven-compiler-plugin.version>
        <maven-release-plugin.version>3.0.0-M5</maven-release-plugin.version>

        <!-- LOMBOK -->
        <lombok.version>1.18.24</lombok.version>
        <!-- END LOMBOK -->

        <!-- PLUGINS -->
        <spotbugs.maven.plugin.revision>3.1.9</spotbugs.maven.plugin.revision>
        <!-- END PLUGINS -->

        <!-- SPRING -->
        <spring-cloud.version>2021.0.3</spring-cloud.version>
        <spring-boot-admin.version>3.0.0-M1</spring-boot-admin.version>
        <!-- END SPRING -->

        <!-- JACOCO -->
        <jacoco.skip>false</jacoco.skip>
        <jacoco.skip.instrument>true</jacoco.skip.instrument>
        <jacoco.percentage.complexity>1</jacoco.percentage.complexity>
        <jacoco.percentage.line>1</jacoco.percentage.line>
        <jacoco.percentage.branch>1</jacoco.percentage.branch>
        <jacoco.percentage.method>1</jacoco.percentage.method>
        <jacoco.misscount.class>0</jacoco.misscount.class>
        <jacoco.maven.plugin.revision>0.8.5</jacoco.maven.plugin.revision>
        <org.jacoco.agent.revison>0.8.8</org.jacoco.agent.revison>
        <jacoco-maven-plugin.version>0.8.8</jacoco-maven-plugin.version>
        <sonar.coverage.jacoco.xmlReportPaths>${project.basedir}/target/site/jacoco/jacoco.xml
        </sonar.coverage.jacoco.xmlReportPaths>

        <!-- END JACOCO -->

        <dozer.jdk8.support.revision>1.0.6</dozer.jdk8.support.revision>
        <dozer.jdk8.support.revision>1.0.6</dozer.jdk8.support.revision>

        <spring-cloud-starter-feign.version>1.4.7.RELEASE</spring-cloud-starter-feign.version>
        <spring-boot-test-autoconfigure.version>2.7.0</spring-boot-test-autoconfigure.version>

        <maven-failsafe-plugin.version>3.0.0-M6</maven-failsafe-plugin.version>
        <sonar-maven-plugin.version>3.9.1.2184</sonar-maven-plugin.version>
        <com.github.tomakehurst.wiremock>2.27.2</com.github.tomakehurst.wiremock>
        <wiremock.jre8.version>2.35.0</wiremock.jre8.version>

        <org.jetbrains.annotations>23.0.0</org.jetbrains.annotations>
        <spring-mock.version>2.0.8</spring-mock.version>
        <r2dbc-postgresql.version>0.8.12.RELEASE</r2dbc-postgresql.version>

    </properties>


    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <!-- Reactive Postgres -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-r2dbc</artifactId>
        </dependency>
        <dependency>
            <groupId>io.r2dbc</groupId>
            <artifactId>r2dbc-h2</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>io.r2dbc</groupId>
            <artifactId>r2dbc-postgresql</artifactId>
            <version>${r2dbc-postgresql.version}</version>
            <scope>runtime</scope>
        </dependency>
        <!-- End Reactive Postgres -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-oauth2-client</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>com.vaadin.external.google</groupId>
                    <artifactId>android-json</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-test-autoconfigure</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>io.craftsman</groupId>
            <artifactId>dozer-jdk8-support</artifactId>
            <version>${dozer.jdk8.support.revision}</version>
        </dependency>
        <dependency>
            <groupId>org.jacoco</groupId>
            <artifactId>org.jacoco.agent</artifactId>
            <version>${org.jacoco.agent.revison}</version>
            <classifier>runtime</classifier>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-inline</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
        </dependency>
        <dependency>
            <groupId>io.projectreactor</groupId>
            <artifactId>reactor-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <version>5.7.5</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.github.tomakehurst</groupId>
            <artifactId>wiremock-jre8</artifactId>
            <version>${wiremock.jre8.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.tomakehurst</groupId>
            <artifactId>wiremock</artifactId>
            <version>${com.github.tomakehurst.wiremock}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-failsafe-plugin.version}</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven-failsafe-plugin.version}</version>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>jacoco-instrument</id>
                        <phase>test</phase>
                        <goals>
                            <goal>instrument</goal>
                        </goals>
                        <configuration>
                            <skip>${jacoco.skip.instrument}</skip>
                        </configuration>
                    </execution>
                    <execution>
                        <id>default-prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <skip>${jacoco.skip}</skip>
                        </configuration>
                    </execution>
                    <execution>
                        <id>default-report</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <skip>${jacoco.skip}</skip>
                            <dataFile>${project.build.directory}/jacoco.exec</dataFile>
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>default-check</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <skip>${jacoco.skip}</skip>
                            <rules>
                                <rule implementation="org.jacoco.maven.RuleConfiguration">
                                    <element>BUNDLE</element>
                                    <limits>
                                        <!-- - COMPLEXITY - Calculates the Cyclomatic complexity - See
                                            http://www.eclemma.org/jacoco/trunk/doc/counters.html for more info -->
                                        <limit implementation="org.jacoco.report.check.Limit">
                                            <counter>COMPLEXITY</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>${jacoco.percentage.complexity}</minimum>
                                        </limit>
                                        <!-- - LINE - Calculates total number of lines covered - See http://www.eclemma.org/jacoco/trunk/doc/counters.html
                                            for more info -->
                                        <limit implementation="org.jacoco.report.check.Limit">
                                            <counter>LINE</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>${jacoco.percentage.line}</minimum>
                                        </limit>
                                        <!-- - BRANCH - Calculates total number of branches (IF ELSE, SWITCH
                                            etc) covered - See http://www.eclemma.org/jacoco/trunk/doc/counters.html
                                            for more info -->
                                        <limit implementation="org.jacoco.report.check.Limit">
                                            <counter>BRANCH</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>${jacoco.percentage.branch}</minimum>
                                        </limit>
                                        <!-- - METHOD - Calculates total number of methods covered - See
                                            http://www.eclemma.org/jacoco/trunk/doc/counters.html for more info -->
                                        <limit implementation="org.jacoco.report.check.Limit">
                                            <counter>METHOD</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>${jacoco.percentage.method}</minimum>
                                        </limit>
                                        <!-- - CLASS - Calculates total number of classes covered - See
                                            http://www.eclemma.org/jacoco/trunk/doc/counters.html for more info -->
                                        <limit implementation="org.jacoco.report.check.Limit">
                                            <counter>CLASS</counter>
                                            <value>MISSEDCOUNT</value>
                                            <maximum>${jacoco.misscount.class}</maximum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                        </configuration>
                    </execution>
                    <execution>
                        <id>report</id>
                        <goals>
                            <goal>report-aggregate</goal>
                        </goals>
                        <phase>verify</phase>
                        <configuration>
                            <skip>${jacoco.skip}</skip>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <excludes>
                        <exclude>**/**/*Application.**</exclude>
                        <exclude>**/**/entities/**</exclude>
                        <exclude>**/**/dto/**</exclude>
                        <exclude>**/**/enums/**</exclude>
                        <exclude>**/**/config/**</exclude>
                        <exclude>**/**/exception/**</exclude>
                        <exclude>**/**/aop/**</exclude>
                        <exclude>**/**/test/**</exclude>
                        <exclude>**/**/properties/**</exclude>
                        <exclude>**/**/test/**</exclude>
                    </excludes>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
